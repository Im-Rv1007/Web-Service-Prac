
package service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "temp_service", targetNamespace = "http://Service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TempService {


    /**
     * 
     * @param f
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "F_TO_C")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "F_TO_C", targetNamespace = "http://Service/", className = "service.FTOC")
    @ResponseWrapper(localName = "F_TO_CResponse", targetNamespace = "http://Service/", className = "service.FTOCResponse")
    @Action(input = "http://Service/temp_service/F_TO_CRequest", output = "http://Service/temp_service/F_TO_CResponse")
    public Double fTOC(
        @WebParam(name = "f", targetNamespace = "")
        double f);

    /**
     * 
     * @param c
     * @return
     *     returns java.lang.Double
     */
    @WebMethod(operationName = "C_TO_F")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "C_TO_F", targetNamespace = "http://Service/", className = "service.CTOF")
    @ResponseWrapper(localName = "C_TO_FResponse", targetNamespace = "http://Service/", className = "service.CTOFResponse")
    @Action(input = "http://Service/temp_service/C_TO_FRequest", output = "http://Service/temp_service/C_TO_FResponse")
    public Double cTOF(
        @WebParam(name = "c", targetNamespace = "")
        double c);

}
